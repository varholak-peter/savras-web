{"version":3,"sources":["components/Layout/index.ts","api/getData.ts","components/Card/styled.ts","components/Card/index.tsx","util/index.ts","pages/Home/styled.ts","pages/Home/index.tsx","styles/global.ts","App.tsx","styles/theme.ts","index.tsx"],"names":["Layout","styled","div","getData","a","endpoint","process","Error","fetch","res","json","data","Author","span","Button","button","ContentLink","ContentWrap","Description","p","Footer","footer","Source","Time","time","Title","strong","Wrap","Card","author","description","id","source","title","url","href","target","onClick","type","dayjs","extend","relativeTime","formatData","map","date","fromNow","h1","TitleCapital","TitleRest","CardList","HomePage","useState","status","setStatus","setData","useEffect","loadData","catch","err","String","card","key","GlobalStyles","createGlobalStyle","App","theme","color","white","black","ReactDOM","render","document","getElementById"],"mappings":"kRAEO,IAAMA,EAASC,IAAOC,IAAV,K,8BCQNC,EAAO,uCAAG,gCAAAC,EAAA,yDACfC,EAAWC,oCADI,sBAIb,IAAIC,MAAM,sCAJG,uBAOHC,MAAMH,GAPH,cAOfI,EAPe,gBAQFA,EAAIC,OARF,cAQfC,EARe,yBAUdA,GAVc,4CAAH,qD,81DCRb,IAAMC,EAASX,IAAOY,KAAV,KAONC,EAASb,IAAOc,OAAV,KAYNC,EAAcf,IAAOG,EAAV,KAIXa,EAAchB,IAAOC,IAAV,KAMXgB,EAAcjB,IAAOkB,EAAV,KAYXC,EAASnB,IAAOoB,OAAV,KAKNC,EAASrB,IAAOY,KAAV,KAYNU,EAAOtB,IAAOuB,KAAV,KAMJC,EAAQxB,IAAOyB,OAAV,KAYLC,EAAO1B,IAAOC,IAAV,KC9DJ0B,EAAkB,SAAC,GAAD,IAC7BC,EAD6B,EAC7BA,OACAC,EAF6B,EAE7BA,YACAC,EAH6B,EAG7BA,GACAC,EAJ6B,EAI7BA,OACAR,EAL6B,EAK7BA,KACAS,EAN6B,EAM7BA,MACAC,EAP6B,EAO7BA,IAP6B,OAS7B,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAeC,KAAMD,EAAKE,OAAO,UAC/B,kBAAC,EAAD,KAAUH,GACV,kBAAC,EAAD,KAAgBH,IAElB,kBAAC,EAAD,CAAUO,QAAS,kBAAMN,GAAIO,KAAK,UAAlC,MAIF,6BACA,kBAAC,EAAD,KACE,kBAAC,EAAD,KAASd,GACT,kBAAC,EAAD,KAAWQ,GACX,kBAAC,EAAD,KAAWH,M,iCCjCjBU,IAAMC,OAAOC,KAEN,IAAMC,EAAa,SAAC/B,GAAD,OACxBA,EAAKgC,KAAI,gBAAGd,EAAH,EAAGA,OAAQe,EAAX,EAAWA,KAAMd,EAAjB,EAAiBA,YAAaC,EAA9B,EAA8BA,GAAIC,EAAlC,EAAkCA,OAAQC,EAA1C,EAA0CA,MAAOC,EAAjD,EAAiDA,IAAjD,MAA4D,CACnEL,SACAC,cACAC,KACAC,SACAR,KAAMe,IAAMK,GAAMC,SAAQ,GAC1BZ,QACAC,W,obCdG,IAAMT,EAAQxB,IAAO6C,GAAV,KAKLC,EAAe9C,IAAOY,KAAV,KAKZmC,EAAY/C,IAAOY,KAAV,KAKToC,EAAWhD,IAAOC,IAAV,KCTRgD,EAAW,WAAO,IAAD,EACAC,mBAAS,cADT,mBACrBC,EADqB,KACbC,EADa,OAEJF,mBAAqB,IAFjB,mBAErBxC,EAFqB,KAEf2C,EAFe,KAgB5B,OAZAC,qBAAU,YACM,uCAAG,4BAAAnD,EAAA,sEACGD,IADH,OACTM,EADS,OAEf6C,EAAQZ,EAAWjC,IACnB4C,EAAU,IAHK,2CAAH,qDAMdG,GAAWC,OAAM,SAACC,GAChBL,EAAUM,OAAOD,SAElB,IAGD,oCACE,gCACE,kBAAC,EAAD,KACE,kBAAC,EAAD,UACA,kBAAC,EAAD,gBAGJ,kBAAC,EAAD,KACGN,GAAkBzC,EAAKgC,KAAI,SAACiB,GAAD,OAAU,kBAAC,EAAD,eAAMC,IAAKD,EAAK7B,IAAQ6B,U,uZC9B/D,IAAME,EAAeC,YAAH,KCEZC,EAAU,kBACrB,kBAAChE,EAAD,KACE,kBAAC8D,EAAD,MACA,kBAAC,EAAD,QCRSG,GAAQ,CACnBC,MAAO,CACLC,MAAO,UACPC,MAAO,YCITC,IAASC,OACP,kBAAC,IAAD,CAAeL,MAAOA,IACpB,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.56a53d5a.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Layout = styled.div``\n","export type DataRes = {\n  author: string\n  date: string\n  description: string\n  id: string\n  source: string\n  title: string\n  url: string\n}\n\nexport const getData = async (): Promise<DataRes[]> => {\n  const endpoint = process.env.REACT_APP_ENDPOINT\n\n  if (!endpoint) {\n    throw new Error('REACT_APP_ENDPOINT must be present')\n  }\n\n  const res = await fetch(endpoint)\n  const data = await res.json()\n\n  return data\n}\n","import styled from 'styled-components'\n\nexport const Author = styled.span`\n  color: #666666;\n  font-size: 0.6rem;\n  font-weight: 400;\n  margin-left: auto;\n`\n\nexport const Button = styled.button`\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  font-size: 1.2rem;\n  font-weight: bold;\n  padding: 0.5rem 0.4rem;\n  position: absolute;\n  right: 0;\n  top: 0;\n`\n\nexport const ContentLink = styled.a`\n  text-decoration: none;\n`\n\nexport const ContentWrap = styled.div`\n  align-items: flex-start;\n  display: flex;\n  flex-direction: row;\n`\n\nexport const Description = styled.p`\n  color: #333333;\n  display: -webkit-box;\n  font-size: 0.7rem;\n  font-weight: 400;\n  margin: 0;\n  max-height: 3.9rem;\n  overflow: hidden;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nexport const Footer = styled.footer`\n  display: flex;\n  flex-direction: row;\n`\n\nexport const Source = styled.span`\n  color: #666666;\n  font-size: 0.6rem;\n  font-weight: 400;\n  margin-left: 0.2rem;\n\n  &:before {\n    content: 'â€¢';\n    margin-right: 0.2rem;\n  }\n`\n\nexport const Time = styled.time`\n  color: #666666;\n  font-size: 0.6rem;\n  font-weight: 400;\n`\n\nexport const Title = styled.strong`\n  color: black;\n  display: -webkit-box;\n  font-size: 0.9rem;\n  line-height: 1.2;\n  margin-bottom: 0.4rem;\n  max-width: calc(100% - 2rem);\n  overflow: hidden;\n  -webkit-line-clamp: 3;\n  -webkit-box-orient: vertical;\n`\n\nexport const Wrap = styled.div`\n  background-color: white;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  padding: 0.5rem;\n  position: relative;\n`\n","import React, { FC } from 'react'\n\nimport * as S from './styled'\n\nexport type CardData = {\n  author: string\n  description: string\n  id: string\n  source: string\n  time: string\n  title: string\n  url: string\n}\n\ntype Props = CardData\n\nexport const Card: FC<Props> = ({\n  author,\n  description,\n  id,\n  source,\n  time,\n  title,\n  url,\n}) => (\n  <S.Wrap>\n    <S.ContentWrap>\n      <S.ContentLink href={url} target=\"_blank\">\n        <S.Title>{title}</S.Title>\n        <S.Description>{description}</S.Description>\n      </S.ContentLink>\n      <S.Button onClick={() => id} type=\"button\">\n        X\n      </S.Button>\n    </S.ContentWrap>\n    <hr />\n    <S.Footer>\n      <S.Time>{time}</S.Time>\n      <S.Source>{source}</S.Source>\n      <S.Author>{author}</S.Author>\n    </S.Footer>\n  </S.Wrap>\n)\n","import dayjs from 'dayjs'\nimport relativeTime from 'dayjs/plugin/relativeTime'\n\nimport { DataRes } from 'api/getData'\nimport { CardData } from 'components/Card'\n\ndayjs.extend(relativeTime)\n\nexport const formatData = (data: DataRes[]): CardData[] =>\n  data.map(({ author, date, description, id, source, title, url }) => ({\n    author,\n    description,\n    id,\n    source,\n    time: dayjs(date).fromNow(true),\n    title,\n    url,\n  }))\n","import styled from 'styled-components'\n\nexport const Title = styled.h1`\n  color: white;\n  margin: 0.25rem 0.75rem;\n`\n\nexport const TitleCapital = styled.span`\n  font-size: 2rem;\n  font-weight: bold;\n`\n\nexport const TitleRest = styled.span`\n  font-size: 1.6rem;\n  font-weight: 300;\n`\n\nexport const CardList = styled.div`\n  padding: 0 0.5rem;\n`\n","import React, { useEffect, useState } from 'react'\n\nimport { getData } from 'api'\nimport { Card, CardData } from 'components/Card'\nimport { formatData } from '../../util'\n\nimport * as S from './styled'\n\nexport const HomePage = () => {\n  const [status, setStatus] = useState('Loading...')\n  const [data, setData] = useState<CardData[]>([])\n\n  useEffect(() => {\n    const loadData = async () => {\n      const res = await getData()\n      setData(formatData(res))\n      setStatus('')\n    }\n\n    loadData().catch((err) => {\n      setStatus(String(err))\n    })\n  }, [])\n\n  return (\n    <>\n      <header>\n        <S.Title>\n          <S.TitleCapital>S</S.TitleCapital>\n          <S.TitleRest>avras</S.TitleRest>\n        </S.Title>\n      </header>\n      <S.CardList>\n        {status ? status : data.map((card) => <Card key={card.id} {...card} />)}\n      </S.CardList>\n    </>\n  )\n}\n","import 'sanitize.css'\nimport { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  * {\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  html {\n    font-family: sans-serif;\n    font-size: 125%;\n    height: 100%;\n  }\n\n  body {\n    background-color: #42aaf4;\n    font-size: 0.8rem;\n    height: 100%;\n  }\n\n  #root {\n    height: 100%;\n    width: 100%;\n  }\n`\n","import React, { FC } from 'react'\nimport { Layout } from 'components/Layout'\nimport { HomePage } from 'pages/Home'\nimport { GlobalStyles } from 'styles/global'\n\nexport const App: FC = () => (\n  <Layout>\n    <GlobalStyles />\n    <HomePage />\n  </Layout>\n)\n","export const theme = {\n  color: {\n    white: '#FFFFFF',\n    black: '#000000',\n  },\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { ThemeProvider } from 'styled-components'\nimport { App } from 'App'\nimport { theme } from 'styles/theme'\n\nconst renderApp = () => {\n  ReactDOM.render(\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>,\n    document.getElementById('root'),\n  )\n}\n\nif (module.hot) {\n  module.hot.accept('./App', renderApp)\n}\n\nrenderApp()\n"],"sourceRoot":""}